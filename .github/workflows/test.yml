name: CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

env:
  FOUNDRY_PROFILE: ci

jobs:
  check:
    name: Code Quality Checks
    runs-on: ubuntu-latest
    timeout-minutes: 10
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Show Forge version
        run: forge --version

      - name: Run Forge fmt
        run: forge fmt --check
        id: fmt

      - name: Run Forge build
        run: forge build --sizes
        id: build

  smart-contract-tests:
    name: Smart Contract Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    needs: check
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run Forge tests
        run: forge test -vvv
        id: test

      - name: Generate coverage report
        run: forge coverage --report lcov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./lcov.info
          flags: solidity
          name: smart-contract-coverage

  typescript-client-tests:
    name: TypeScript Client Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install TypeScript client dependencies
        run: cd ts-client && npm ci

      - name: Lint TypeScript code
        run: cd ts-client && npm run lint

      - name: Run all unit tests with coverage
        run: cd ts-client && npm run test:unit -- --coverage
      
      - name: Run utility tests
        run: cd ts-client && npm run test:utils

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./ts-client/coverage/lcov.info
          flags: typescript
          name: typescript-client-coverage

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    needs: [smart-contract-tests, typescript-client-tests]
    # Run integration tests on main and develop branches, PRs to those branches, and on manual dispatch
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop' || github.base_ref == 'main' || github.base_ref == 'develop' || github.event_name == 'workflow_dispatch'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install TypeScript client dependencies
        run: cd ts-client && npm ci

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run end-to-end integration tests
        run: |
          chmod +x ./scripts/manual-e2e-test.sh
          ./scripts/manual-e2e-test.sh

      - name: Archive test logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-logs
          path: |
            anvil.log
            contract-address.txt
            
  test-results:
    name: Summarize Test Results
    runs-on: ubuntu-latest
    needs: [smart-contract-tests, typescript-client-tests, integration-tests]
    if: always()
    steps:
      - name: Generate test summary
        run: |
          echo "# Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Status" >> $GITHUB_STEP_SUMMARY
          echo "- Smart Contract Tests: ${{ needs.smart-contract-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- TypeScript Client Tests: ${{ needs.typescript-client-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Integration Tests: ${{ needs.integration-tests.result || 'Not Run' }}" >> $GITHUB_STEP_SUMMARY
          
          FAILED_JOBS=()
          if [[ "${{ needs.smart-contract-tests.result }}" != "success" ]]; then
            FAILED_JOBS+=("Smart Contract Tests")
          fi
          if [[ "${{ needs.typescript-client-tests.result }}" != "success" ]]; then
            FAILED_JOBS+=("TypeScript Client Tests")
          fi
          if [[ "${{ needs.integration-tests.result }}" != "success" && "${{ needs.integration-tests.result }}" != "skipped" ]]; then
            FAILED_JOBS+=("Integration Tests")
          fi
          
          if [[ ${#FAILED_JOBS[@]} -gt 0 ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "## Failed Jobs" >> $GITHUB_STEP_SUMMARY
            for job in "${FAILED_JOBS[@]}"; do
              echo "- $job" >> $GITHUB_STEP_SUMMARY
            done
            echo "::error::One or more test jobs failed: ${FAILED_JOBS[*]}"
            exit 1
          fi
