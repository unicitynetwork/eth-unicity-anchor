name: Nightly Build and Tests

on:
  schedule:
    # Runs at 00:00 UTC every day
    - cron: '0 0 * * *'
  workflow_dispatch:  # Allow manual triggering

env:
  FOUNDRY_PROFILE: ci

jobs:
  smart-contract-tests:
    name: Smart Contract Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0  # Fetch all history for accurate comparison

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Show Foundry version
        run: forge --version

      - name: Run Forge fmt
        run: forge fmt --check

      - name: Run Forge build
        run: forge build --sizes

      - name: Run Forge tests
        run: forge test -vvv

      - name: Generate coverage report
        run: forge coverage --report lcov

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./lcov.info
          flags: solidity,nightly
          name: smart-contract-coverage-nightly

  typescript-client-tests:
    name: TypeScript Client Tests
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for accurate comparison

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install TypeScript client dependencies
        run: cd ts-client && npm ci

      - name: Lint TypeScript code
        run: cd ts-client && npm run lint

      # Run all TypeScript client tests
      - name: Run all unit tests with coverage
        run: cd ts-client && npm test -- --coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: ./ts-client/coverage/lcov.info
          flags: typescript,nightly
          name: typescript-client-coverage-nightly

  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    timeout-minutes: 30
    needs: [smart-contract-tests, typescript-client-tests]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install root dependencies
        run: npm ci

      - name: Install TypeScript client dependencies
        run: cd ts-client && npm ci

      - name: Install Foundry
        uses: foundry-rs/foundry-toolchain@v1

      - name: Run end-to-end integration tests
        run: |
          chmod +x ./scripts/manual-e2e-test.sh
          ./scripts/manual-e2e-test.sh

      - name: Archive test logs
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: nightly-test-logs
          path: |
            anvil.log
            contract-address.txt

  test-report:
    name: Generate Test Report
    runs-on: ubuntu-latest
    needs: [smart-contract-tests, typescript-client-tests, integration-tests]
    if: always()
    steps:
      - name: Generate summary
        run: |
          echo "# Nightly Test Results" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Status" >> $GITHUB_STEP_SUMMARY
          echo "- Smart Contract Tests: ${{ needs.smart-contract-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- TypeScript Client Tests: ${{ needs.typescript-client-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "- Integration Tests: ${{ needs.integration-tests.result }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## Coverage Reports" >> $GITHUB_STEP_SUMMARY
          echo "- Coverage reports are available on Codecov" >> $GITHUB_STEP_SUMMARY
          
          # Check if any jobs failed
          FAILED_JOBS=()
          if [[ "${{ needs.smart-contract-tests.result }}" != "success" ]]; then
            FAILED_JOBS+=("Smart Contract Tests")
          fi
          if [[ "${{ needs.typescript-client-tests.result }}" != "success" ]]; then
            FAILED_JOBS+=("TypeScript Client Tests")
          fi
          if [[ "${{ needs.integration-tests.result }}" != "success" ]]; then
            FAILED_JOBS+=("Integration Tests")
          fi
          
          if [[ ${#FAILED_JOBS[@]} -gt 0 ]]; then
            echo "" >> $GITHUB_STEP_SUMMARY
            echo "## Failed Jobs" >> $GITHUB_STEP_SUMMARY
            for job in "${FAILED_JOBS[@]}"; do
              echo "- $job" >> $GITHUB_STEP_SUMMARY
            done
            echo "::error::Nightly test failures detected: ${FAILED_JOBS[*]}"
            exit 1
          fi
          
  notify-failure:
    name: Send Notification on Failure
    runs-on: ubuntu-latest
    needs: [test-report]
    if: failure()
    steps:
      - name: Create GitHub Issue on Failure
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const date = new Date().toISOString().split('T')[0];
            const title = `Nightly Test Failure: ${date}`;
            const body = `
            # Nightly Build Failure
            
            The nightly build on ${date} has failed.
            
            ## Failed Jobs
            ${process.env.FAILED_JOBS || 'Check the workflow run for details.'}
            
            ## Workflow Run
            https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            Please investigate the failures and resolve them as soon as possible.
            `;
            
            await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: title,
              body: body,
              labels: ['bug', 'nightly-failure']
            });